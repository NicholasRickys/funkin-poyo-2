# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          sudo apt-get install glibc-source
          sudo apt-get install libidn12
          sudo apt-get install libidn-dev
          haxelib setup ~/haxelib
          haxe -cp ./actions -D analyzer-optimize -main Main --interp
          haxelib --quiet install hxcpp 4.2.1 > /dev/null -y
          haxelib set hxcpp 4.2.1

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linuxBuild
          path: 'export/release/linux/bin'
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib --quiet install hxcpp > /dev/null
          haxe -cp ./actions -D analyzer-optimize -main Main --interp
          haxelib --quiet install hxcpp 4.2.1 > /dev/null -y
          haxelib set hxcpp 4.2.1
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib --quiet install hxcpp > /dev/null
          haxe -cp ./actions -D analyzer-optimize -main Main --interp
          haxelib --quiet install hxcpp 4.2.1 > /dev/null -y
          haxelib set hxcpp 4.2.1
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: macBuild
          path: export/release/macos/bin
  buildAndroid:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 18

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      - name: Install Haxelibs
        run: |
          haxelib setup ~/haxelib
          haxelib --quiet install hxcpp > /dev/null
          haxe -cp ./actions -D analyzer-optimize -main Main --interp
          haxelib --quiet install hxcpp 4.2.1 > /dev/null -y
          haxelib set hxcpp 4.2.1

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}          

      - name: Compile
        run: haxelib run lime build android

      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: VS Poyo Android
          path: export/release/android/bin/app/build/outputs/apk/debug
